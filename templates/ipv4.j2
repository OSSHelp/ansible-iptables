*filter
:INPUT {{ ipv4_policies.filter.input | default('accept') | upper }} [0:0]
:FORWARD {{ ipv4_policies.filter.forward | default('accept') | upper }} [0:0]
:OUTPUT {{ ipv4_policies.filter.output | default('accept') | upper }} [0:0]
:enemy_input - [0:0]
{% if custom_filter_chains | default([]) | length > 0 %}
{% for chain, params in custom_filter_chains.items() %}
:{{ chain }} - [0:0]
{% endfor %}
{% endif %}
{% if docker_forward.v4 is defined %}
:DOCKER-USER - [0:0]
:docker_forward - [0:0]
{% endif %}{% for rule in input.v4|default([]) %}
-A INPUT{{
                ' -i ' ~ rule.i if rule.i is defined else ''
              }}{{
                ' ! -i ' ~ rule.ni if rule.ni is defined else ''
              }}{{
                ' -p ' ~ rule.p | default('tcp') ~ ' -m ' ~ rule.p | default('tcp') ~ ' --dport ' ~ rule.dport if rule.dport is defined and ',' not in rule.dport|string else ''
              }}{{
                ' -p ' ~ rule.p | default('tcp') ~ ' -m multiport --dports ' ~ rule.dport if rule.dport is defined and ',' in rule.dport|string else ''
              }}{{
                ' -p ' ~ rule.p if rule.p is defined and rule.dport is not defined else ''
              }}{{
                ' -m policy --dir ' ~ rule.dir | default('in') ~ ' --pol ' ~ rule.pol | default('ipsec') if rule.m is defined and rule.m == 'policy' else ''
              }}{{
                ' -m icmp --icmp-type ' ~ rule.type if rule.type is defined else ''
              }}{{
                ' -s ' ~ rule.s if rule.s is defined else ''
              }}{{
                ' ! -s ' ~ rule.ns if rule.ns is defined else ''
              }}{{
                ' -d ' ~ rule.d if rule.d is defined else ''
              }}{{
                ' ! -d ' ~ rule.nd if rule.nd is defined else ''
              }}{{
                ' -m state --state ' ~ rule.state if rule.state is defined else ''
              }}{{
                ' -m set --match-set ' ~ rule.list ~ ' src' if rule.list is defined else ''
              }}{{
                ' -m comment --comment "' ~ rule.comment ~ '"' if rule.comment is defined else ''
              }}{{
                ' -m nfacct --nfacct-name ' ~ rule.nfacct if rule.nfacct is defined else ''
              }}{{
                ' -j ' ~ rule.action | default('ACCEPT') if rule.nfacct is not defined else ''
              }}
{% endfor %}{% for iface in ext_ifaces %}
-A INPUT -i {{ iface }} -j enemy_input
{% endfor %}{% for rule in forward.v4|default([]) %}
-A FORWARD{{
                ' -i ' ~ rule.i if rule.i is defined else ''
              }}{{
                ' ! -i ' ~ rule.ni if rule.ni is defined else ''
              }}{{
                ' -o ' ~ rule.o if rule.o is defined else ''
              }}{{
                ' -p ' ~ rule.p | default('tcp') ~ ' -m ' ~ rule.p | default('tcp') ~ ' --dport ' ~ rule.dport if rule.dport is defined and ',' not in rule.dport|string else ''
              }}{{
                ' -p ' ~ rule.p | default('tcp') ~ ' -m multiport --dports ' ~ rule.dport if rule.dport is defined and ',' in rule.dport|string else ''
              }}{{
                ' -p ' ~ rule.p if rule.p is defined and rule.dport is not defined else ''
              }}{{
                ' --tcp-flags ' ~ rule.flags ~ ' SYN' if rule.p is defined and rule.p == 'tcp' and rule.flags is defined else ''
              }}{{
                ' -m tcpmss --mss ' ~ rule.mss if rule.mss is defined else ''
              }}{{
                ' -s ' ~ rule.s if rule.s is defined else ''
              }}{{
                ' ! -s ' ~ rule.ns if rule.ns is defined else ''
              }}{{
                ' -d ' ~ rule.d if rule.d is defined else ''
              }}{{
                ' ! -d ' ~ rule.nd if rule.nd is defined else ''
              }}{{
                ' -m state --state ' ~ rule.state if rule.state is defined else ''
              }}{{
                ' -m set --match-set ' ~ rule.list ~ ' src' if rule.list is defined else ''
              }}{{
                ' -m comment --comment "' ~ rule.comment ~ '"' if rule.comment is defined else ''
              }}{{
                ' -m nfacct --nfacct-name ' ~ rule.nfacct if rule.nfacct is defined else ''
              }}{{
                ' -j ' ~ rule.action | default('ACCEPT') if rule.nfacct is not defined else ''
              }}{{
                ' --set-mss ' ~ rule.setmss if rule.action is defined and rule.action == 'TCPMSS' and rule.setmss is defined else ''
              }}{{
                ' --clamp-mss-to-pmtu' if rule.action is defined and rule.action == 'TCPMSS' and rule.setmss is not defined else ''
              }}
{% endfor %}{% for rule in output.v4|default([]) %}
-A OUTPUT{{
                ' -i ' ~ rule.i if rule.i is defined else ''
              }}{{
                ' ! -i ' ~ rule.ni if rule.ni is defined else ''
              }}{{
                ' -o ' ~ rule.o if rule.o is defined else ''
              }}{{
                ' ! -o ' ~ rule.no if rule.no is defined else ''
              }}{{
                ' -p ' ~ rule.p | default('tcp') ~ ' -m ' ~ rule.p | default('tcp') ~ ' --sport ' ~ rule.sport if rule.sport is defined and ',' not in rule.sport|string else ''
              }}{{
                ' -p ' ~ rule.p | default('tcp') ~ ' -m multiport --sports ' ~ rule.sport if rule.sport is defined and ',' in rule.sport|string else ''
              }}{{
                ' -p ' ~ rule.p if rule.p is defined and rule.sport is not defined else ''
              }}{{
                ' -m policy --dir ' ~ rule.dir | default('in') ~ ' --pol ' ~ rule.pol | default('ipsec') if rule.m is defined and rule.m == 'policy' else ''
              }}{{
                ' -m icmp --icmp-type ' ~ rule.type if rule.type is defined else ''
              }}{{
                ' -s ' ~ rule.s if rule.s is defined else ''
              }}{{
                ' ! -s ' ~ rule.ns if rule.ns is defined else ''
              }}{{
                ' -d ' ~ rule.d if rule.d is defined else ''
              }}{{
                ' ! -d ' ~ rule.nd if rule.nd is defined else ''
              }}{{
                ' -m state --state ' ~ rule.state if rule.state is defined else ''
              }}{{
                ' -m set --match-set ' ~ rule.list ~ ' src' if rule.list is defined else ''
              }}{{
                ' -m comment --comment "' ~ rule.comment ~ '"' if rule.comment is defined else ''
              }}{{
                ' -m nfacct --nfacct-name ' ~ rule.nfacct if rule.nfacct is defined else ''
              }}{{
                ' -j ' ~ rule.action | default('ACCEPT') if rule.nfacct is not defined else ''
              }}
{% endfor %}{% if docker_forward.v4 is defined %}{% for iface in ext_ifaces %}
-A DOCKER-USER -i {{ iface }} -j docker_forward
{% endfor %}{% endif %}{% for rule in docker_forward.v4|default([]) %}
-A docker_forward{{
                ' -i ' ~ rule.i if rule.i is defined else ''
              }}{{
                ' ! -i ' ~ rule.ni if rule.ni is defined else ''
              }}{{
                ' -p ' ~ rule.p | default('tcp') ~ ' -m ' ~ rule.p | default('tcp') ~ ' --dport ' ~ rule.dport if rule.dport is defined and ',' not in rule.dport|string else ''
              }}{{
                ' -p ' ~ rule.p | default('tcp') ~ ' -m multiport --dports ' ~ rule.dport if rule.dport is defined and ',' in rule.dport|string else ''
              }}{{
                ' -p ' ~ rule.p if rule.p is defined and rule.dport is not defined else ''
              }}{{
                ' -s ' ~ rule.s if rule.s is defined else ''
              }}{{
                ' ! -s ' ~ rule.ns if rule.ns is defined else ''
              }}{{
                ' -d ' ~ rule.d if rule.d is defined else ''
              }}{{
                ' ! -d ' ~ rule.nd if rule.nd is defined else ''
              }}{{
                ' -m state --state ' ~ rule.state if rule.state is defined else ''
              }}{{
                ' -m set --match-set ' ~ rule.list ~ ' src' if rule.list is defined else ''
              }}{{
                ' -m comment --comment "' ~ rule.comment ~ '"' if rule.comment is defined else ''
              }}{{
                ' -j ' ~ rule.action | default('ACCEPT') if rule.nfacct is not defined else ''
              }}
{% endfor %}{% if accept_icmp.v4 %}
-A enemy_input -p icmp -m icmp --icmp-type echo-request -j ACCEPT
-A enemy_input -p icmp -m icmp --icmp-type time-exceeded -j ACCEPT
-A enemy_input -p icmp -m icmp --icmp-type destination-unreachable -j ACCEPT
-A enemy_input -p icmp -m icmp --icmp-type parameter-problem -j ACCEPT
{% endif %}{% for rule in enemy_input.v4|default([]) %}
-A enemy_input{{
                ' -i ' ~ rule.i if rule.i is defined else ''
              }}{{
                ' ! -i ' ~ rule.ni if rule.ni is defined else ''
              }}{{
                ' -p ' ~ rule.p | default('tcp') ~ ' -m ' ~ rule.p | default('tcp') ~ ' --dport ' ~ rule.dport if rule.dport is defined and ',' not in rule.dport|string else ''
              }}{{
                ' -p ' ~ rule.p | default('tcp') ~ ' -m multiport --dports ' ~ rule.dport if rule.dport is defined and ',' in rule.dport|string else ''
              }}{{
                ' -p ' ~ rule.p if rule.p is defined and rule.dport is not defined else ''
              }}{{
                ' -m policy --dir ' ~ rule.dir | default('in') ~ ' --pol ' ~ rule.pol | default('ipsec') if rule.m is defined and rule.m == 'policy' else ''
              }}{{
                ' -m icmp --icmp-type ' ~ rule.type if rule.type is defined else ''
              }}{{
                ' -s ' ~ rule.s if rule.s is defined else ''
              }}{{
                ' ! -s ' ~ rule.ns if rule.ns is defined else ''
              }}{{
                ' -d ' ~ rule.d if rule.d is defined else ''
              }}{{
                ' ! -d ' ~ rule.nd if rule.nd is defined else ''
              }}{{
                ' -m state --state ' ~ rule.state if rule.state is defined else ''
              }}{{
                ' -m set --match-set ' ~ rule.list ~ ' src' if rule.list is defined else ''
              }}{{
                ' -m comment --comment "' ~ rule.comment ~ '"' if rule.comment is defined else ''
              }}{{
                ' -m nfacct --nfacct-name ' ~ rule.nfacct if rule.nfacct is defined else ''
              }}{{
                ' -j ' ~ rule.action | default('ACCEPT') if rule.nfacct is not defined else ''
              }}
{% endfor %}
-A enemy_input -m state --state RELATED,ESTABLISHED -j ACCEPT
-A enemy_input -j DROP
{% if custom_filter_chains | default([]) | length > 0 %}{% for chain, params in custom_filter_chains.items() %}{% for rule in params.v4|default([]) %}
-A {{ chain }}{{
                ' -i ' ~ rule.i if rule.i is defined else ''
              }}{{
                ' ! -i ' ~ rule.ni if rule.ni is defined else ''
              }}{{
                ' -p ' ~ rule.p | default('tcp') ~ ' -m ' ~ rule.p | default('tcp') ~ ' --dport ' ~ rule.dport if rule.dport is defined and ',' not in rule.dport|string else ''
              }}{{
                ' -p ' ~ rule.p | default('tcp') ~ ' -m multiport --dports ' ~ rule.dport if rule.dport is defined and ',' in rule.dport|string else ''
              }}{{
                ' -p ' ~ rule.p if rule.p is defined and rule.dport is not defined else ''
              }}{{
                ' -m policy --dir ' ~ rule.dir | default('in') ~ ' --pol ' ~ rule.pol | default('ipsec') if rule.m is defined and rule.m == 'policy' else ''
              }}{{
                ' -m icmp --icmp-type ' ~ rule.type if rule.type is defined else ''
              }}{{
                ' -s ' ~ rule.s if rule.s is defined else ''
              }}{{
                ' ! -s ' ~ rule.ns if rule.ns is defined else ''
              }}{{
                ' -d ' ~ rule.d if rule.d is defined else ''
              }}{{
                ' ! -d ' ~ rule.nd if rule.nd is defined else ''
              }}{{
                ' -m state --state ' ~ rule.state if rule.state is defined else ''
              }}{{
                ' -m set --match-set ' ~ rule.list ~ ' src' if rule.list is defined else ''
              }}{{
                ' -m comment --comment "' ~ rule.comment ~ '"' if rule.comment is defined else ''
              }}{{
                ' -m nfacct --nfacct-name ' ~ rule.nfacct if rule.nfacct is defined else ''
              }}{{
                ' -j ' ~ rule.action | default('ACCEPT') if rule.nfacct is not defined else ''
              }}
{% endfor %}{% endfor %}{% endif %}
COMMIT
*nat
:PREROUTING {{ ipv4_policies.nat.prerouting | default('accept') | upper }} [0:0]
:INPUT {{ ipv4_policies.nat.input | default('accept') | upper }} [0:0]
:OUTPUT {{ ipv4_policies.nat.output | default('accept') | upper }} [0:0]
:POSTROUTING {{ ipv4_policies.nat.postrouting | default('accept') | upper }} [0:0]
{% for rule in dnat.v4|default([]) %}
-A PREROUTING{{
               ' -d ' ~ rule.d if rule.d is defined else ''
             }}{{
               ' ! -d ' ~ rule.nd if rule.nd is defined else ''
             }}{{
               ' -s ' ~ rule.s if rule.s is defined else ''
             }}{{
               ' ! -s ' ~ rule.ns if rule.ns is defined else ''
             }}{{
               ' -i ' ~ rule.i if rule.i is defined else ''
             }}{{
               ' -o ' ~ rule.o if rule.o is defined else ''
             }}{{
               ' -p ' ~ rule.p | default('tcp') ~ ' -m ' ~ rule.p | default('tcp') ~ ' --dport ' ~ rule.dport|replace('-', ':') if rule.dport is defined and ',' not in rule.dport|string else ''
             }}{{
               ' -p ' ~ rule.p | default('tcp') ~ ' -m multiport --dports ' ~ rule.dport if rule.dport is defined and ',' in rule.dport|string else ''
             }}{{
               ' -m policy --dir ' ~ rule.dir | default('in') ~ ' --pol ' ~ rule.pol | default('ipsec') if rule.m is defined and rule.m == 'policy' else ''
             }}{{
               ' -m set --match-set ' ~ rule.list ~ ' src' if rule.list is defined else ''
             }}{{
               ' -m comment --comment "' ~ rule.comment ~ '"' if rule.comment is defined else ''
             }} -j DNAT --to-destination {{ rule.dstaddr }}{{ ':' ~ rule.dstport|replace(':', '-') if rule.dstport is defined else '' }}
{% endfor %}
{% for rule in snat.v4|default([]) %}
-A POSTROUTING{{
               ' -d ' ~ rule.d if rule.d is defined else ''
             }}{{
               ' ! -d ' ~ rule.nd if rule.nd is defined else ''
             }}{{
               ' -s ' ~ rule.s if rule.s is defined else ''
             }}{{
               ' ! -s ' ~ rule.ns if rule.ns is defined else ''
             }}{{
               ' -i ' ~ rule.i if rule.i is defined else ''
             }}{{
               ' -o ' ~ rule.o if rule.o is defined else ''
             }}{{
               ' -p ' ~ rule.p | default('tcp') ~ ' -m ' ~ rule.p | default('tcp') ~ ' --dport ' ~ rule.dport if rule.dport is defined else ''
             }}{{
               ' -m set --match-set ' ~ rule.list ~ ' src' if rule.list is defined else ''
             }}{{
               ' -m comment --comment "' ~ rule.comment ~ '"' if rule.comment is defined else ''
             }} -j SNAT --to-source {{ rule.srcaddr }}
{% endfor %}
{% for rule in masq.v4|default([]) %}
-A POSTROUTING{{
               ' -d ' ~ rule.d if rule.d is defined else ''
             }}{{
               ' ! -d ' ~ rule.nd if rule.nd is defined else ''
             }}{{
               ' -s ' ~ rule.s if rule.s is defined else ''
             }}{{
               ' ! -s ' ~ rule.ns if rule.ns is defined else ''
             }}{{
               ' -i ' ~ rule.i if rule.i is defined else ''
             }}{{
               ' -o ' ~ rule.o if rule.o is defined else ''
             }}{{
               ' -p ' ~ rule.p | default('tcp') ~ ' -m ' ~ rule.p | default('tcp') ~ ' --dport ' ~ rule.dport if rule.dport is defined else ''
             }}{{
               ' -m set --match-set ' ~ rule.list ~ ' src' if rule.list is defined else ''
             }}{{
               ' -m comment --comment "' ~ rule.comment ~ '"' if rule.comment is defined else ''
             }} -j MASQUERADE
{% endfor %}
{% for rule in postrouting.v4|default([]) %}
-A POSTROUTING{{
               ' -d ' ~ rule.d if rule.d is defined else ''
             }}{{
               ' ! -d ' ~ rule.nd if rule.nd is defined else ''
             }}{{
               ' -s ' ~ rule.s if rule.s is defined else ''
             }}{{
               ' ! -s ' ~ rule.ns if rule.ns is defined else ''
             }}{{
               ' -i ' ~ rule.i if rule.i is defined else ''
             }}{{
               ' -o ' ~ rule.o if rule.o is defined else ''
             }}{{
               ' -p ' ~ rule.p | default('tcp') ~ ' -m ' ~ rule.p | default('tcp') ~ ' --dport ' ~ rule.dport if rule.dport is defined else ''
             }}{{
               ' -m policy --dir ' ~ rule.dir | default('in') ~ ' --pol ' ~ rule.pol | default('ipsec') if rule.m is defined and rule.m == 'policy' else ''
             }}{{
               ' -m set --match-set ' ~ rule.list ~ ' src' if rule.list is defined else ''
             }}{{
               ' -m comment --comment "' ~ rule.comment ~ '"' if rule.comment is defined else ''
             }} -j {{ rule.action | default('ACCEPT') }}
{% endfor %}
COMMIT
*mangle
:PREROUTING {{ ipv4_policies.mangle.prerouting | default('accept') | upper }} [0:0]
:INPUT {{ ipv4_policies.mangle.input | default('accept') | upper }} [0:0]
:FORWARD {{ ipv4_policies.mangle.forward | default('accept') | upper }} [0:0]
:OUTPUT {{ ipv4_policies.mangle.output | default('accept') | upper }} [0:0]
:POSTROUTING {{ ipv4_policies.mangle.postrouting | default('accept') | upper }} [0:0]
{% for rule in mangle_forward.v4|default([]) %}
-A FORWARD{{
                ' -i ' ~ rule.i if rule.i is defined else ''
              }}{{
                ' ! -i ' ~ rule.ni if rule.ni is defined else ''
              }}{{
                ' -o ' ~ rule.o if rule.o is defined else ''
              }}{{
                ' -p ' ~ rule.p | default('tcp') ~ ' -m ' ~ rule.p | default('tcp') ~ ' --dport ' ~ rule.dport if rule.dport is defined and ',' not in rule.dport|string else ''
              }}{{
                ' -p ' ~ rule.p | default('tcp') ~ ' -m multiport --dports ' ~ rule.dport if rule.dport is defined and ',' in rule.dport|string else ''
              }}{{
                ' -p ' ~ rule.p if rule.p is defined and rule.dport is not defined else ''
              }}{{
                ' --tcp-flags ' ~ rule.flags ~ ' SYN' if rule.p is defined and rule.p == 'tcp' and rule.flags is defined else ''
              }}{{
                ' -m tcpmss --mss ' ~ rule.mss if rule.mss is defined else ''
              }}{{
                ' -s ' ~ rule.s if rule.s is defined else ''
              }}{{
                ' ! -s ' ~ rule.ns if rule.ns is defined else ''
              }}{{
                ' -d ' ~ rule.d if rule.d is defined else ''
              }}{{
                ' ! -d ' ~ rule.nd if rule.nd is defined else ''
              }}{{
                ' -m state --state ' ~ rule.state if rule.state is defined else ''
              }}{{
                ' -m set --match-set ' ~ rule.list ~ ' src' if rule.list is defined else ''
              }}{{
                ' -m comment --comment "' ~ rule.comment ~ '"' if rule.comment is defined else ''
              }}{{
                ' -m nfacct --nfacct-name ' ~ rule.nfacct if rule.nfacct is defined else ''
              }}{{
                ' -j ' ~ rule.action | default('ACCEPT') if rule.nfacct is not defined else ''
              }}{{
                ' --set-mss ' ~ rule.setmss if rule.action is defined and rule.action == 'TCPMSS' and rule.setmss is defined else ''
              }}{{
                ' --clamp-mss-to-pmtu' if rule.action is defined and rule.action == 'TCPMSS' and rule.setmss is not defined else ''
              }}
{% endfor %}{% for rule in mangle_postrouting.v4|default([]) %}
-A POSTROUTING{{
               ' -d ' ~ rule.d if rule.d is defined else ''
             }}{{
               ' ! -d ' ~ rule.nd if rule.nd is defined else ''
             }}{{
               ' -s ' ~ rule.s if rule.s is defined else ''
             }}{{
               ' ! -s ' ~ rule.ns if rule.ns is defined else ''
             }}{{
               ' -i ' ~ rule.i if rule.i is defined else ''
             }}{{
               ' -o ' ~ rule.o if rule.o is defined else ''
             }}{{
               ' -p ' ~ rule.p | default('tcp') ~ ' -m ' ~ rule.p | default('tcp') ~ ' --dport ' ~ rule.dport if rule.dport is defined else ''
             }}{{
               ' -m policy --dir ' ~ rule.dir | default('in') ~ ' --pol ' ~ rule.pol | default('ipsec') if rule.m is defined and rule.m == 'policy' else ''
             }}{{
               ' -m set --match-set ' ~ rule.list ~ ' src' if rule.list is defined else ''
             }}{{
               ' -m comment --comment "' ~ rule.comment ~ '"' if rule.comment is defined else ''
             }} -j {{ rule.action | default('ACCEPT') }}
{% endfor %}
COMMIT
